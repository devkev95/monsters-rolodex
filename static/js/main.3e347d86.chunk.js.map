{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","name","id","email","className","alt","src","CardList","props","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","value","target","setState","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAEaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAKC,EAAd,EAAcA,MAAd,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BJ,EAA1B,4BACtB,6BAAKD,IACL,4BAAIE,QCHCI,G,MAAW,SAACC,GAAD,OAAW,qBAAKJ,UAAU,YAAf,SAA4BI,EAAMC,SAASC,KAAI,gBAAGT,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,MAAb,OAAyB,cAAC,EAAD,CAAMF,KAAMA,EAAeC,GAAIA,EAAIC,MAAOA,GAAnBD,UCDrHS,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIT,UAAU,SACVU,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC0BHG,G,kNA3BbC,MAAQ,CACNR,SAAU,GACVS,YAAa,I,EAOfL,aAAe,gBAAaM,EAAb,EAAGC,OAAUD,MAAb,OAA2B,EAAKE,SAAS,CAAEH,YAAaC,K,uDAJvE,WAAoB,IAAD,OACjBG,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAI,EAAKL,SAAS,CAACZ,SAAUiB,S,oBAK/H,WAAW,IAAD,EAC0BC,KAAKV,MAA/BR,EADA,EACAA,SAAUS,EADV,EACUA,YACZU,EAAmBnB,EAASoB,QAAO,qBAAG5B,KAAgB6B,cAAcC,SAASb,EAAYY,kBAC/F,OACE,sBAAK1B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACEQ,YAAY,kBACZC,aAAcc,KAAKd,eAErB,cAAC,EAAD,CAAUJ,SAAUmB,W,GAtBZI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3e347d86.chunk.js","sourcesContent":["import './card.styles.css';\n\nexport const Card = ({ name, id , email}) => (\n    <div className='card-container'>\n        <img alt='monster' src={`https://robohash.org/${id}?set=set2&size=180x180`}/>\n        <h2>{name}</h2>\n        <p>{email}</p>\n    </div>\n)","import { Card } from '../card/card.component';\nimport './card-list.styles.css';\n\nexport const CardList = (props) => <div className='card-list'>{props.monsters.map(({ name, id, email }) => <Card name={name} key={id} id={id} email={email}/>)}</div>\n","import './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => \n    <input \n        className='search' \n        type='search' \n        placeholder={placeholder} \n        onChange={handleChange} \n    />;","import { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component.jsx';\nimport { SearchBox } from './components/search-box/search-box.component.jsx';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    monsters: [],\n    searchField: ''\n  };\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({monsters: users}));  \n  }\n\n  handleChange = ({ target: { value } }) => this.setState({ searchField: value });\n\n  render () {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(({ name }) => name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n          <h1>Monsters Rolodex</h1>\n          <SearchBox \n            placeholder='search monsters' \n            handleChange={this.handleChange} \n          />\n          <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}